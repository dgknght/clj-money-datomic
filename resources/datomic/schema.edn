  ;; Accounts
[{:db/id #db/id[:db.part/db]
  :db/ident :account/name
  :db/valueType :db.type/string
  :db/cardinality :db.cardinality/one
  :db/doc "The name of the account"
  :db.install/_attribute :db.part/db}

 {:db/id #db/id[:db.part/db]
  :db/ident :account/type
  :db/valueType :db.type/ref
  :db/cardinality :db.cardinality/one
  :db/doc "The type of the account (asset, liability, equity, income, or expense)"
  :db.install/_attribute :db.part/db}
 
 {:db/id #db/id[:db.part/user]
  :db/ident :account.type/asset}
 {:db/id #db/id[:db.part/user]
  :db/ident :account.type/liability}
 {:db/id #db/id[:db.part/user]
  :db/ident :account.type/equity}
 {:db/id #db/id[:db.part/user]
  :db/ident :account.type/income}
 {:db/id #db/id[:db.part/user]
  :db/ident :account.type/expense}

 {:db/id #db/id[:db.part/db]
  :db/ident :account/parent
  :db/valueType :db.type/ref
  :db/cardinality :db.cardinality/one
  :db/doc "Refers to the parent of the account"
  :db.install/_attribute :db.part/db}

 {:db/id #db/id[:db.part/db]
  :db/ident :account/balance
  :db/valueType :db.type/bigdec
  :db/cardinality :db.cardinality/one
  :db/doc "The current balance of the account"
  :db.install/_attribute :db.part/db}

  ;; Transactions

 {:db/id #db/id[:db.part/db]
  :db/ident :transaction/date
  :db/valueType :db.type/instant
  :db/cardinality :db.cardinality/one
  :db/doc "The date on which the transaction ocurred"
  :db.install/_attribute :db.part/db}

 {:db/id #db/id[:db.part/db]
  :db/ident :transaction/description
  :db/valueType :db.type/string
  :db/cardinality :db.cardinality/one
  :db/doc "The user's description of the transaction"
  :db.install/_attribute :db.part/db}

 {:db/id #db/id[:db.part/db]
  :db/ident :transaction/items
  :db/isComponent true
  :db/valueType :db.type/ref
  :db/cardinality :db.cardinality/many
  :db/doc "The items that make up the transaction"
  :db.install/_attribute :db.part/db}

 ;; Transaction Items

 {:db/id #db/id[:db.part/db]
  :db/ident :transaction-item/account
  :db/valueType :db.type/ref
  :db/cardinality :db.cardinality/one
  :db/doc "The account affected by this transaction item"
  :db.install/_attribute :db.part/db}

 {:db/id #db/id[:db.part/db]
  :db/ident :transaction-item/action
  :db/valueType :db.type/ref
  :db/cardinality :db.cardinality/one
  :db/doc "The account action (debit or credit)"
  :db.install/_attribute :db.part/db}

 {:db/id #db/id[:db.part/user]
  :db/ident :transaction-item.action/debit}
 {:db/id #db/id[:db.part/user]
  :db/ident :transaction-item.action/credit}

 {:db/id #db/id[:db.part/db]
  :db/ident :transaction-item/amount
  :db/valueType :db.type/bigdec
  :db/cardinality :db.cardinality/one
  :db/doc "The amount of currency in the transaction item"
  :db.install/_attribute :db.part/db}

 ;; Budgets

 {:db/id #db/id [:db.part/db]
  :db/ident :budget/name
  :db/valueType :db.type/string
  :db/cardinality :db.cardinality/one
  :db/doc "The name of the budget"
  :db.install/_attribute :db.part/db}

 ;; Functions

 {:db/id #db/id[:db.part/user]
  :db/doc "Function indicating whether an account type is left-side"
  :db/ident :left-side?
  :db/fn clojure-money.common/left-side?}

 {:db/id #db/id[:db.part/user]
  :db/doc "Function indicating whether an account type is right-side"
  :db/ident :right-side?
  :db/fn clojure-money.common/right-side?}

 {:db/id #db/id[:db.part/user]
  :db/doc "Returns 1 or -1 to be applied to an amount used to update an account balance based on a credit or debut"
  :db/ident :polarizer
  :db/fn clojure-money.common/polarizer}

 {:db/id #db/id[:db.part/user]
  :db/doc "adjusts an account balance"
  :db/ident :adjust-balance
  :db/fn clojure-money.common/adjust-balance}
 ]
